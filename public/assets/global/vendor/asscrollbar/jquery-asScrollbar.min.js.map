{"version":3,"sources":["jquery-asScrollbar.es.js"],"names":["global","factory","define","amd","exports","require","mod","jQuery","jqueryAsScrollbarEs","this","_jquery","_classCallCheck","instance","Constructor","TypeError","isPercentage","n","indexOf","convertPercentageToFloat","parseFloat","slice","convertMatrixToArray","value","substr","replace","split","getTime","window","performance","now","Date","_jquery2","obj","__esModule","default","_interopRequireDefault","_typeof","Symbol","iterator","constructor","prototype","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","DEFAULTS","namespace","skin","handleSelector","handleTemplate","barClass","handleClass","disabledClass","draggingClass","hoveringClass","direction","barLength","handleLength","minHandleLength","maxHandleLength","mouseDrag","touchDrag","pointerDrag","clickMove","clickMoveStep","mousewheel","mousewheelSpeed","keyboard","useCssTransforms3d","useCssTransforms","useCssTransitions","duration","easing","easingBezier","mX1","mY1","mX2","mY2","a","aA1","aA2","b","c","calcBezier","aT","getSlope","getTForX","aX","aGuessT","currentSlope","css","fn","EASING","ease","linear","ease-in","ease-out","ease-in-out","vendors","requestAnimationFrame","vp","cancelAnimationFrame","test","navigator","userAgent","lastTime","callback","nextTime","Math","max","setTimeout","clearTimeout","support","events","transition","end","WebkitTransition","MozTransition","OTransition","animation","WebkitAnimation","MozAnimation","OAnimation","prefixes","style","get","tests","csstransforms","Boolean","csstransforms3d","csstransitions","cssanimations","property","prefixed","result","upper","charAt","toUpperCase","undefined","each","prefix","toLowerCase","String","transform","transform3d","DocumentTouch","document","touch","PointerEvent","MSPointerEvent","pointer","prefixPointerEvent","pointerEvent","asScrollbar","bar","options","arguments","$bar","extend","data","classes","directionClass","attributes","axis","position","clientLength","_states","_drag","time","_frameId","handlePosition","init","$handle","find","appendTo","addClass","attr","setBarLength","setHandleLength","updateLength","bindEvents","trigger","eventType","_len","params","Array","_key","concat","NAMESPACE$1","onFunction","word","substring","apply","state","_i","join","_this","on","eventName","proxy","onDragStart","onDragEnd","onClick","e","delta","deltaFactor","deltaY","deltaX","offset","getHandlePosition","move","enter","removeClass","is","leave","isDefaultPrevented","activeElement","shadowRoot","by","to","which","moveBy","moveTo","preventDefault","event","distance","x","left","y","top","factor","abs","_this2","one","onDragMove","off","originalEvent","touches","changedTouches","pageX","pageY","clientX","clientY","first","second","update","getHandleLenght","getBarLength","toString","temp","makeHandlePositionStyle","sync","type","setHandlePosition","doMove","_this3","hasOwnProperty","call","prepareTransition"],"mappings":"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","file":"jquery-asScrollbar.min.js","sourcesContent":["/**\n* jQuery asScrollbar v0.5.7\n* https://github.com/amazingSurge/jquery-asScrollbar\n*\n* Copyright (c) amazingSurge\n* Released under the LGPL-3.0 license\n*/\nimport $ from 'jquery';\n\nvar DEFAULTS = {\n  namespace: 'asScrollbar',\n\n  skin: null,\n  handleSelector: null,\n  handleTemplate: '<div class=\"{{handle}}\"></div>',\n\n  barClass: null,\n  handleClass: null,\n\n  disabledClass: 'is-disabled',\n  draggingClass: 'is-dragging',\n  hoveringClass: 'is-hovering',\n\n  direction: 'vertical',\n\n  barLength: null,\n  handleLength: null,\n\n  minHandleLength: 30,\n  maxHandleLength: null,\n\n  mouseDrag: true,\n  touchDrag: true,\n  pointerDrag: true,\n  clickMove: true,\n  clickMoveStep: 0.3, // 0 - 1\n  mousewheel: true,\n  mousewheelSpeed: 50,\n\n  keyboard: true,\n\n  useCssTransforms3d: true,\n  useCssTransforms: true,\n  useCssTransitions: true,\n\n  duration: '500',\n  easing: 'ease' // linear, ease-in, ease-out, ease-in-out\n};\n\nconst easingBezier = (mX1, mY1, mX2, mY2) => {\n  'use strict';\n\n  const a = (aA1, aA2) => {\n    return 1.0 - 3.0 * aA2 + 3.0 * aA1;\n  };\n\n  const b = (aA1, aA2) => {\n    return 3.0 * aA2 - 6.0 * aA1;\n  };\n\n  const c = (aA1) => {\n    return 3.0 * aA1;\n  };\n\n  // Returns x(t) given t, x1, and x2, or y(t) given t, y1, and y2.\n  const calcBezier = (aT, aA1, aA2) => {\n    return ((a(aA1, aA2) * aT + b(aA1, aA2)) * aT + c(aA1)) * aT;\n  };\n\n  // Returns dx/dt given t, x1, and x2, or dy/dt given t, y1, and y2.\n  const getSlope = (aT, aA1, aA2) => {\n    return 3.0 * a(aA1, aA2) * aT * aT + 2.0 * b(aA1, aA2) * aT + c(aA1);\n  };\n\n  const getTForX = (aX) => {\n    // Newton raphson iteration\n    let aGuessT = aX;\n    for (let i = 0; i < 4; ++i) {\n      let currentSlope = getSlope(aGuessT, mX1, mX2);\n      if (currentSlope === 0.0) {\n        return aGuessT;\n      }\n      let currentX = calcBezier(aGuessT, mX1, mX2) - aX;\n      aGuessT -= currentX / currentSlope;\n    }\n    return aGuessT;\n  };\n\n  if (mX1 === mY1 && mX2 === mY2) {\n    return {\n      css: 'linear',\n      fn(aX) {\n        return aX;\n      }\n    };\n  }\n\n  return {\n    css: `cubic-bezier(${mX1},${mY1},${mX2},${mY2})`,\n    fn(aX) {\n      return calcBezier(getTForX(aX), mY1, mY2);\n    }\n  };\n};\n\nvar EASING = {\n  ease: easingBezier(0.25, 0.1, 0.25, 1.0),\n  linear: easingBezier(0.00, 0.0, 1.00, 1.0),\n  'ease-in': easingBezier(0.42, 0.0, 1.00, 1.0),\n  'ease-out': easingBezier(0.00, 0.0, 0.58, 1.0),\n  'ease-in-out': easingBezier(0.42, 0.0, 0.58, 1.0)\n};\n\nif (!Date.now) {\n  Date.now = () => {\n    return new Date().getTime();\n  };\n}\n\nconst vendors = ['webkit', 'moz'];\nfor (let i = 0; i < vendors.length && !window.requestAnimationFrame; ++i) {\n  let vp = vendors[i];\n  window.requestAnimationFrame = window[`${vp}RequestAnimationFrame`];\n  window.cancelAnimationFrame = (window[`${vp}CancelAnimationFrame`] || window[`${vp}CancelRequestAnimationFrame`]);\n}\n\nif (/iP(ad|hone|od).*OS (6|7|8)/.test(window.navigator.userAgent) || !window.requestAnimationFrame || !window.cancelAnimationFrame) {\n  let lastTime = 0;\n  window.requestAnimationFrame = (callback) => {\n    let now = getTime();\n    let timePlus = 16;\n    let nextTime = Math.max(lastTime + timePlus, now);\n    return setTimeout(() => {\n        callback(lastTime = nextTime);\n      },\n      nextTime - now);\n  };\n  window.cancelAnimationFrame = clearTimeout;\n}\n\nfunction isPercentage(n) {\n  return typeof n === 'string' && n.indexOf('%') !== -1;\n}\n\nfunction convertPercentageToFloat(n) {\n  return parseFloat(n.slice(0, -1) / 100, 10);\n}\n\nfunction convertMatrixToArray(value) {\n  if (value && (value.substr(0, 6) === 'matrix')) {\n    return value.replace(/^.*\\((.*)\\)$/g, '$1').replace(/px/g, '').split(/, +/);\n  }\n  return false;\n}\n\nfunction getTime () {\n  if (typeof window.performance !== 'undefined' && window.performance.now) {\n    return window.performance.now();\n  }\n  return Date.now();\n}\n\n/**\n * Css features detect\n **/\nlet support = {};\n\n((support) => {\n  /**\n   * Borrowed from Owl carousel\n   **/\n   'use strict';\n\n  const events = {\n      transition: {\n        end: {\n          WebkitTransition: 'webkitTransitionEnd',\n          MozTransition: 'transitionend',\n          OTransition: 'oTransitionEnd',\n          transition: 'transitionend'\n        }\n      },\n      animation: {\n        end: {\n          WebkitAnimation: 'webkitAnimationEnd',\n          MozAnimation: 'animationend',\n          OAnimation: 'oAnimationEnd',\n          animation: 'animationend'\n        }\n      }\n    },\n    prefixes = ['webkit', 'Moz', 'O', 'ms'],\n    style = $('<support>').get(0).style,\n    tests = {\n      csstransforms() {\n        return Boolean(test('transform'));\n      },\n      csstransforms3d() {\n        return Boolean(test('perspective'));\n      },\n      csstransitions() {\n        return Boolean(test('transition'));\n      },\n      cssanimations() {\n        return Boolean(test('animation'));\n      }\n    };\n\n  const test = (property, prefixed) => {\n    let result = false,\n      upper = property.charAt(0).toUpperCase() + property.slice(1);\n\n    if (style[property] !== undefined) {\n      result = property;\n    }\n    if (!result) {\n      $.each(prefixes, (i, prefix) => {\n        if (style[prefix + upper] !== undefined) {\n          result = `-${prefix.toLowerCase()}-${upper}`;\n          return false;\n        }\n        return true;\n      });\n    }\n\n    if (prefixed) {\n      return result;\n    }\n    if (result) {\n      return true;\n    }\n    return false;\n  };\n\n  const prefixed = (property) => {\n    return test(property, true);\n  };\n\n  if (tests.csstransitions()) {\n    /*eslint no-new-wrappers: \"off\"*/\n    support.transition = new String(prefixed('transition'));\n    support.transition.end = events.transition.end[support.transition];\n  }\n\n  if (tests.cssanimations()) {\n    /*eslint no-new-wrappers: \"off\"*/\n    support.animation = new String(prefixed('animation'));\n    support.animation.end = events.animation.end[support.animation];\n  }\n\n  if (tests.csstransforms()) {\n    /*eslint no-new-wrappers: \"off\"*/\n    support.transform = new String(prefixed('transform'));\n    support.transform3d = tests.csstransforms3d();\n  }\n\n  if (('ontouchstart' in window) || window.DocumentTouch && document instanceof window.DocumentTouch) {\n    support.touch = true;\n  } else {\n    support.touch = false;\n  }\n\n  if (window.PointerEvent || window.MSPointerEvent) {\n    support.pointer = true;\n  } else {\n    support.pointer = false;\n  }\n\n  support.prefixPointerEvent = (pointerEvent) => {\n    return window.MSPointerEvent ?\n      `MSPointer${pointerEvent.charAt(9).toUpperCase()}${pointerEvent.substr(10)}` :\n      pointerEvent;\n  };\n})(support);\n\nconst NAMESPACE$1 = 'asScrollbar';\n\n/**\n * Plugin constructor\n **/\nclass asScrollbar {\n  constructor(bar, options = {}) {\n    this.$bar = $(bar);\n    options = this.options = $.extend({}, DEFAULTS, options, this.$bar.data('options') || {});\n    bar.direction = this.options.direction;\n\n    this.classes = {\n      directionClass: `${options.namespace}-${options.direction}`,\n      barClass: options.barClass? options.barClass: options.namespace,\n      handleClass: options.handleClass? options.handleClass: `${options.namespace}-handle`\n    };\n\n    if (this.options.direction === 'vertical') {\n      this.attributes = {\n        axis: 'Y',\n        position: 'top',\n        length: 'height',\n        clientLength: 'clientHeight'\n      };\n    } else if (this.options.direction === 'horizontal') {\n      this.attributes = {\n        axis: 'X',\n        position: 'left',\n        length: 'width',\n        clientLength: 'clientWidth'\n      };\n    }\n\n    // Current state information.\n    this._states = {};\n\n    // Current state information for the drag operation.\n    this._drag = {\n      time: null,\n      pointer: null\n    };\n\n    // Current timeout\n    this._frameId = null;\n\n    // Current handle position\n    this.handlePosition = 0;\n\n    this.easing = EASING[this.options.easing] || EASING.ease;\n\n    this.init();\n  }\n\n  init() {\n    let options = this.options;\n\n    this.$handle = this.$bar.find(this.options.handleSelector);\n    if (this.$handle.length === 0) {\n      this.$handle = $(options.handleTemplate.replace(/\\{\\{handle\\}\\}/g, this.classes.handleClass)).appendTo(this.$bar);\n    } else {\n      this.$handle.addClass(this.classes.handleClass);\n    }\n\n    this.$bar.addClass(this.classes.barClass).addClass(this.classes.directionClass).attr('draggable', false);\n\n    if (options.skin) {\n      this.$bar.addClass(options.skin);\n    }\n    if (options.barLength !== null) {\n      this.setBarLength(options.barLength);\n    }\n\n    if (options.handleLength !== null) {\n      this.setHandleLength(options.handleLength);\n    }\n\n    this.updateLength();\n\n    this.bindEvents();\n\n    this.trigger('ready');\n  }\n\n  trigger(eventType, ...params) {\n    let data = [this].concat(params);\n\n    // event\n    this.$bar.trigger(`${NAMESPACE$1}::${eventType}`, data);\n\n    // callback\n    eventType = eventType.replace(/\\b\\w+\\b/g, (word) => {\n      return word.substring(0, 1).toUpperCase() + word.substring(1);\n    });\n    let onFunction = `on${eventType}`;\n\n    if (typeof this.options[onFunction] === 'function') {\n      this.options[onFunction].apply(this, params);\n    }\n  }\n\n  /**\n   * Checks whether the carousel is in a specific state or not.\n   */\n  is(state) {\n    return this._states[state] && this._states[state] > 0;\n  }\n\n  /**\n   * Enters a state.\n   */\n  enter(state) {\n    if (this._states[state] === undefined) {\n      this._states[state] = 0;\n    }\n\n    this._states[state]++;\n  }\n\n  /**\n   * Leaves a state.\n   */\n  leave(state) {\n    this._states[state]--;\n  }\n\n  eventName(events) {\n    if (typeof events !== 'string' || events === '') {\n      return `.${this.options.namespace}`;\n    }\n    events = events.split(' ');\n\n    let length = events.length;\n    for (let i = 0; i < length; i++) {\n      events[i] = `${events[i]}.${this.options.namespace}`;\n    }\n    return events.join(' ');\n  }\n\n  bindEvents() {\n    if (this.options.mouseDrag) {\n      this.$handle.on(this.eventName('mousedown'), $.proxy(this.onDragStart, this));\n      this.$handle.on(this.eventName('dragstart selectstart'), () => {\n        return false;\n      });\n    }\n\n    if (this.options.touchDrag && support.touch) {\n      this.$handle.on(this.eventName('touchstart'), $.proxy(this.onDragStart, this));\n      this.$handle.on(this.eventName('touchcancel'), $.proxy(this.onDragEnd, this));\n    }\n\n    if (this.options.pointerDrag && support.pointer) {\n      this.$handle.on(this.eventName(support.prefixPointerEvent('pointerdown')), $.proxy(this.onDragStart, this));\n      this.$handle.on(this.eventName(support.prefixPointerEvent('pointercancel')), $.proxy(this.onDragEnd, this));\n    }\n\n    if (this.options.clickMove) {\n      this.$bar.on(this.eventName('mousedown'), $.proxy(this.onClick, this));\n    }\n\n    if (this.options.mousewheel) {\n      this.$bar.on('mousewheel', (e) => {\n        let delta;\n        if (this.options.direction === 'vertical') {\n          delta = e.deltaFactor * e.deltaY;\n        } else if (this.options.direction === 'horizontal') {\n          delta = -1 * e.deltaFactor * e.deltaX;\n        }\n        let offset = this.getHandlePosition();\n        if (offset <= 0 && delta > 0) {\n          return true;\n        } else if (offset >= this.barLength && delta < 0) {\n          return true;\n        }\n        offset -= this.options.mousewheelSpeed * delta;\n        this.move(offset, true);\n        return false;\n      });\n    }\n\n    this.$bar.on(this.eventName('mouseenter'), () => {\n      this.$bar.addClass(this.options.hoveringClass);\n      this.enter('hovering');\n      this.trigger('hover');\n    });\n\n    this.$bar.on(this.eventName('mouseleave'), () => {\n      this.$bar.removeClass(this.options.hoveringClass);\n\n      if (!this.is('hovering')) {\n        return;\n      }\n      this.leave('hovering');\n      this.trigger('hovered');\n    });\n\n    if (this.options.keyboard) {\n      $(document).on(this.eventName('keydown'), (e) => {\n        if (e.isDefaultPrevented && e.isDefaultPrevented()) {\n          return;\n        }\n\n        if (!this.is('hovering')) {\n          return;\n        }\n        let activeElement = document.activeElement;\n        // go deeper if element is a webcomponent\n        while (activeElement.shadowRoot) {\n          activeElement = activeElement.shadowRoot.activeElement;\n        }\n        if ($(activeElement).is(':input,select,option,[contenteditable]')) {\n          return;\n        }\n        let by = 0,\n          to = null;\n\n        let down = 40,\n          end = 35,\n          home = 36,\n          left = 37,\n          pageDown = 34,\n          pageUp = 33,\n          right = 39,\n          spaceBar = 32,\n          up = 38;\n\n        let webkitDown = 63233,\n          webkitEnd = 63275,\n          webkitHome = 63273,\n          webkitLeft = 63234,\n          webkitPageDown = 63277,\n          webkitPageUp = 63276,\n          webkitRight = 63235,\n          webkitUp = 63232;\n\n        switch (e.which) {\n          case left: // left\n          case webkitUp:\n            by = -30;\n            break;\n          case up: // up\n          case webkitDown:\n            by = -30;\n            break;\n          case right: // right\n          case webkitLeft:\n            by = 30;\n            break;\n          case down: // down\n          case webkitRight:\n            by = 30;\n            break;\n          case pageUp: // page up\n          case webkitPageUp:\n            by = -90;\n            break;\n          case spaceBar: // space bar\n          case pageDown: // page down\n          case webkitPageDown:\n            by = -90;\n            break;\n          case end: // end\n          case webkitEnd:\n            to = '100%';\n            break;\n          case home: // home\n          case webkitHome:\n            to = 0;\n            break;\n          default:\n            return;\n        }\n\n        if (by || to !== null) {\n          if (by) {\n            this.moveBy(by, true);\n          } else if (to !== null) {\n            this.moveTo(to, true);\n          }\n          e.preventDefault();\n        }\n      });\n    }\n  }\n\n  onClick(event) {\n    let num = 3;\n\n    if (event.which === num) {\n      return;\n    }\n\n    if (event.target === this.$handle[0]) {\n      return;\n    }\n\n    this._drag.time = new Date().getTime();\n    this._drag.pointer = this.pointer(event);\n\n    let offset = this.$handle.offset();\n    let distance = this.distance({\n        x: offset.left,\n        y: offset.top\n      }, this._drag.pointer),\n      factor = 1;\n\n    if (distance > 0) {\n      distance -= this.handleLength;\n    } else {\n      distance = Math.abs(distance);\n      factor = -1;\n    }\n\n    if (distance > this.barLength * this.options.clickMoveStep) {\n      distance = this.barLength * this.options.clickMoveStep;\n    }\n    this.moveBy(factor * distance, true);\n  }\n\n  /**\n   * Handles `touchstart` and `mousedown` events.\n   */\n  onDragStart(event) {\n    let num = 3;\n    if (event.which === num) {\n      return;\n    }\n\n    // this.$bar.toggleClass(this.options.draggingClass, event.type === 'mousedown');\n    this.$bar.addClass(this.options.draggingClass);\n\n    this._drag.time = new Date().getTime();\n    this._drag.pointer = this.pointer(event);\n\n    let callback = () => {\n      this.enter('dragging');\n      this.trigger('drag');\n    };\n\n    if (this.options.mouseDrag) {\n      $(document).on(this.eventName('mouseup'), $.proxy(this.onDragEnd, this));\n\n      $(document).one(this.eventName('mousemove'), $.proxy(() => {\n        $(document).on(this.eventName('mousemove'), $.proxy(this.onDragMove, this));\n\n        callback();\n      }, this));\n    }\n\n    if (this.options.touchDrag && support.touch) {\n      $(document).on(this.eventName('touchend'), $.proxy(this.onDragEnd, this));\n\n      $(document).one(this.eventName('touchmove'), $.proxy(() => {\n        $(document).on(this.eventName('touchmove'), $.proxy(this.onDragMove, this));\n\n        callback();\n      }, this));\n    }\n\n    if (this.options.pointerDrag && support.pointer) {\n      $(document).on(this.eventName(support.prefixPointerEvent('pointerup')), $.proxy(this.onDragEnd, this));\n\n      $(document).one(this.eventName(support.prefixPointerEvent('pointermove')), $.proxy(() => {\n        $(document).on(this.eventName(support.prefixPointerEvent('pointermove')), $.proxy(this.onDragMove, this));\n\n        callback();\n      }, this));\n    }\n\n    $(document).on(this.eventName('blur'), $.proxy(this.onDragEnd, this));\n  }\n\n\n  /**\n   * Handles the `touchmove` and `mousemove` events.\n   */\n  onDragMove(event) {\n    let distance = this.distance(this._drag.pointer, this.pointer(event));\n\n    if (!this.is('dragging')) {\n      return;\n    }\n\n    event.preventDefault();\n    this.moveBy(distance, true);\n  }\n\n\n  /**\n   * Handles the `touchend` and `mouseup` events.\n   */\n  onDragEnd() {\n    $(document).off(this.eventName('mousemove mouseup touchmove touchend pointermove pointerup MSPointerMove MSPointerUp blur'));\n\n    this.$bar.removeClass(this.options.draggingClass);\n    this.handlePosition = this.getHandlePosition();\n\n    if (!this.is('dragging')) {\n      return;\n    }\n\n    this.leave('dragging');\n    this.trigger('dragged');\n  }\n\n  /**\n   * Gets unified pointer coordinates from event.\n   * @returns {Object} - Contains `x` and `y` coordinates of current pointer position.\n   */\n  pointer(event) {\n    let result = {\n      x: null,\n      y: null\n    };\n\n    event = event.originalEvent || event || window.event;\n\n    event = event.touches && event.touches.length ?\n      event.touches[0] : event.changedTouches && event.changedTouches.length ?\n      event.changedTouches[0] : event;\n\n    if (event.pageX) {\n      result.x = event.pageX;\n      result.y = event.pageY;\n    } else {\n      result.x = event.clientX;\n      result.y = event.clientY;\n    }\n\n    return result;\n  }\n\n  /**\n   * Gets the distance of two pointer.\n   */\n  distance(first, second) {\n    if (this.options.direction === 'vertical') {\n      return second.y - first.y;\n    }\n    return second.x - first.x;\n  }\n\n  setBarLength(length, update) {\n    if (typeof length !== 'undefined') {\n      this.$bar.css(this.attributes.length, length);\n    }\n    if (update !== false) {\n      this.updateLength();\n    }\n  }\n\n  setHandleLength(length, update) {\n    if (typeof length !== 'undefined') {\n      if (length < this.options.minHandleLength) {\n        length = this.options.minHandleLength;\n      } else if (this.options.maxHandleLength && length > this.options.maxHandleLength) {\n        length = this.options.maxHandleLength;\n      }\n      this.$handle.css(this.attributes.length, length);\n\n      if (update !== false) {\n        this.updateLength(length);\n      }\n    }\n  }\n\n  updateLength(length, barLength) {\n    if (typeof length !== 'undefined') {\n      this.handleLength = length;\n    } else {\n      this.handleLength = this.getHandleLenght();\n    }\n    if (typeof barLength !== 'undefined') {\n      this.barLength = barLength;\n    } else {\n      this.barLength = this.getBarLength();\n    }\n  }\n\n  getBarLength() {\n    return this.$bar[0][this.attributes.clientLength];\n  }\n\n  getHandleLenght() {\n    return this.$handle[0][this.attributes.clientLength];\n  }\n\n  getHandlePosition() {\n    let value;\n\n    if (this.options.useCssTransforms && support.transform) {\n      value = convertMatrixToArray(this.$handle.css(support.transform));\n\n      if (!value) {\n        return 0;\n      }\n\n      if (this.attributes.axis === 'X') {\n        value = value[12] || value[4];\n      } else {\n        value = value[13] || value[5];\n      }\n    } else {\n      value = this.$handle.css(this.attributes.position);\n    }\n\n    return parseFloat(value.replace('px', ''));\n  }\n\n  makeHandlePositionStyle(value) {\n    let property, x = '0',\n      y = '0';\n\n    if (this.options.useCssTransforms && support.transform) {\n      if (this.attributes.axis === 'X') {\n        x = `${value}px`;\n      } else {\n        y = `${value}px`;\n      }\n\n      property = support.transform.toString();\n\n      if (this.options.useCssTransforms3d && support.transform3d) {\n        value = `translate3d(${x},${y},0)`;\n      } else {\n        value = `translate(${x},${y})`;\n      }\n    } else {\n      property = this.attributes.position;\n    }\n    let temp = {};\n    temp[property] = value;\n\n    return temp;\n  }\n\n  setHandlePosition(value) {\n    let style = this.makeHandlePositionStyle(value);\n    this.$handle.css(style);\n\n    if (!this.is('dragging')) {\n      this.handlePosition = parseFloat(value);\n    }\n  }\n\n  moveTo(value, trigger, sync) {\n    let type = typeof value;\n\n    if (type === 'string') {\n      if (isPercentage(value)) {\n        value = convertPercentageToFloat(value) * (this.barLength - this.handleLength);\n      }\n\n      value = parseFloat(value);\n      type = 'number';\n    }\n\n    if (type !== 'number') {\n      return;\n    }\n\n    this.move(value, trigger, sync);\n  }\n\n  moveBy(value, trigger, sync) {\n    let type = typeof value;\n\n    if (type === 'string') {\n      if (isPercentage(value)) {\n        value = convertPercentageToFloat(value) * (this.barLength - this.handleLength);\n      }\n\n      value = parseFloat(value);\n      type = 'number';\n    }\n\n    if (type !== 'number') {\n      return;\n    }\n\n    this.move(this.handlePosition + value, trigger, sync);\n  }\n\n  move(value, trigger, sync) {\n    if (typeof value !== 'number' || this.is('disabled')) {\n      return;\n    }\n    if (value < 0) {\n      value = 0;\n    } else if (value + this.handleLength > this.barLength) {\n      value = this.barLength - this.handleLength;\n    }\n\n    if (!this.is('dragging') && sync !== true) {\n      this.doMove(value, this.options.duration, this.options.easing, trigger);\n    } else {\n      this.setHandlePosition(value);\n\n      if (trigger) {\n        this.trigger('change', value / (this.barLength - this.handleLength));\n      }\n    }\n  }\n\n  doMove(value, duration, easing, trigger) {\n    let property;\n    this.enter('moving');\n    duration = duration ? duration : this.options.duration;\n    easing = easing ? easing : this.options.easing;\n\n    let style = this.makeHandlePositionStyle(value);\n    for (property in style) {\n      if ({}.hasOwnProperty.call(style, property)) {\n        break;\n      }\n    }\n\n    if (this.options.useCssTransitions && support.transition) {\n      this.enter('transition');\n      this.prepareTransition(property, duration, easing);\n\n      this.$handle.one(support.transition.end, () => {\n        this.$handle.css(support.transition, '');\n\n        if (trigger) {\n          this.trigger('change', value / (this.barLength - this.handleLength));\n        }\n        this.leave('transition');\n        this.leave('moving');\n      });\n\n      this.setHandlePosition(value);\n    } else {\n      this.enter('animating');\n\n      let startTime = getTime();\n      let start = this.getHandlePosition();\n      let end = value;\n\n      let run = (time) => {\n        let percent = (time - startTime) / this.options.duration;\n\n        if (percent > 1) {\n          percent = 1;\n        }\n\n        percent = this.easing.fn(percent);\n        let scale = 10;\n        let current = parseFloat(start + percent * (end - start), scale);\n        this.setHandlePosition(current);\n\n        if (trigger) {\n          this.trigger('change', current / (this.barLength - this.handleLength));\n        }\n\n        if (percent === 1) {\n          window.cancelAnimationFrame(this._frameId);\n          this._frameId = null;\n\n          this.leave('animating');\n          this.leave('moving');\n        } else {\n          this._frameId = window.requestAnimationFrame(run);\n        }\n      };\n\n      this._frameId = window.requestAnimationFrame(run);\n    }\n  }\n\n  prepareTransition(property, duration, easing, delay) {\n    let temp = [];\n    if (property) {\n      temp.push(property);\n    }\n    if (duration) {\n      if ($.isNumeric(duration)) {\n        duration = `${duration}ms`;\n      }\n      temp.push(duration);\n    }\n    if (easing) {\n      temp.push(easing);\n    } else {\n      temp.push(this.easing.css);\n    }\n    if (delay) {\n      temp.push(delay);\n    }\n    this.$handle.css(support.transition, temp.join(' '));\n  }\n\n  enable() {\n    this._states.disabled = 0;\n\n    this.$bar.removeClass(this.options.disabledClass);\n\n    this.trigger('enable');\n  }\n\n  disable() {\n    this._states.disabled = 1;\n\n    this.$bar.addClass(this.options.disabledClass);\n\n    this.trigger('disable');\n  }\n\n  destroy() {\n    this.$handle.removeClass(this.classes.handleClass);\n    this.$bar.removeClass(this.classes.barClass).removeClass(this.classes.directionClass).attr('draggable', null);\n    if (this.options.skin) {\n      this.$bar.removeClass(this.options.skin);\n    }\n    this.$bar.off(this.eventName());\n    this.$handle.off(this.eventName());\n\n    this.trigger('destroy');\n  }\n\n  static registerEasing(name, ...args) {\n    EASING[name] = easingBezier(...args);\n  }\n\n  static getEasing(name) {\n    return EASING[name];\n  }\n\n  static setDefaults(options) {\n    $.extend(DEFAULTS, $.isPlainObject(options) && options);\n  }\n}\n\nvar info = {\n  version:'0.5.7'\n};\n\nconst NAMESPACE = 'asScrollbar';\nconst OtherAsScrollbar = $.fn.asScrollbar;\n\nconst jQueryAsScrollbar = function(options, ...args) {\n  if (typeof options === 'string') {\n    const method = options;\n\n    if (/^_/.test(method)) {\n      return false;\n    } else if ((/^(get)/.test(method))) {\n      const instance = this.first().data(NAMESPACE);\n      if (instance && typeof instance[method] === 'function') {\n        return instance[method](...args);\n      }\n    } else {\n      return this.each(function() {\n        const instance = $.data(this, NAMESPACE);\n        if (instance && typeof instance[method] === 'function') {\n          instance[method](...args);\n        }\n      });\n    }\n  }\n\n  return this.each(function() {\n    if (!$(this).data(NAMESPACE)) {\n      $(this).data(NAMESPACE, new asScrollbar(this, options));\n    }\n  });\n};\n\n$.fn.asScrollbar = jQueryAsScrollbar;\n\n$.asScrollbar = $.extend({\n  setDefaults: asScrollbar.setDefaults,\n  registerEasing: asScrollbar.registerEasing,\n  getEasing: asScrollbar.getEasing,\n  noConflict: function() {\n    $.fn.asScrollbar = OtherAsScrollbar;\n    return jQueryAsScrollbar;\n  }\n}, info);\n"]}